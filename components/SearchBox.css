@import "/global.css";

:host {
	position: relative;
	display: flex;
	padding: 0;

	height: 52px;
	font-family: arial, sans-serif;

	background: white;
	border: none;
	border-radius: var(--panel-radius);

	box-shadow: 0 3px 8px rgba(9, 32, 77, 0.12), 0 0 2px rgba(29, 17, 51, 0.12);
}

/* Chromium 浏览器会加一个高亮，这里去掉 */
:host(:focus-visible) {
	outline: none;
}

/*
 * 建议列表的显示由两个变量控制，仅当同时存在建议列表才会显示：
 * 1）suggested 	类表示列表不为空，在获取建议后设置，输入框为空时删除。
 * 2）:focus-within	此元素的聚焦状态，在失去焦点时删除。
 *
 * 【纯 CSS 实现？】
 * 使用 #suggestions:empty 也可以判断是否为空，但由于建议列表在输入框后面，
 * 没法让输入框匹配到该状态以去掉圆角和高亮。
 * 如果把列表移放到输入框前面，就不符合直觉，因为视觉上建议列表是在下方的。
 */
:host(.suggested:focus) {
	border-bottom-right-radius: 0;
	border-bottom-left-radius: 0;

	& > #suggestions {
		display: block;
	}
}

/* 高亮跟建议列表有冲突，故仅在没有建议时才显示 */
:host(:not(.suggested):focus) {
	box-shadow: var(--block-focus-shadow);
}

img {
	width: 24px;
	height: 24px;
	margin: 14px;
}

input {
	flex: 1;
	font-size: 1rem;
	border: 0;

	&:focus-visible {
		outline: none;
	}
}

#button {
	padding: 14px;
	border-radius: 0;
}

#suggestions {
	list-style: none;
	display: none;

	position: absolute;
	top: 100%;
	left: 0;
	width: 100%;
	z-index: 10;

	margin: 0;
	padding: 0;
	background: white;

	border-bottom-left-radius: var(--panel-radius);
	border-bottom-right-radius: var(--panel-radius);

	border-top: solid 1px #ddd;
	box-shadow: 0 8px 8px rgba(9, 32, 77, 0.12), 0 2px 2px rgba(29, 17, 51, 0.12);
}

li {
	padding: 8px;
	cursor: pointer;

	&.active,
	&:hover,
	&:focus-visible {
		background: rgba(0, 0, 0, 0.04);
	}
}

#spinner {
	$diameter: 24px;

	display: none;
	position: relative;
	width: 52px;
	background: white;

	&.active {
		display: block;
	}

	&::before {
		content: '';
		position: absolute;
		box-sizing: border-box;

		width: $diameter;
		height: $diameter;
		top: 50%;
		left: 50%;
		margin-top: calc(-$diameter / 2);
		margin-left: calc(-$diameter / 2);

		border-radius: 50%;
		border: 3px solid #ddd;
		border-top-color: #2ea8ff;  /* Firefox 有 BUG 不能用变量 */
		animation: spinner .6s linear infinite;
	}

	&::after {
		content: '';
		position: absolute;
		top: 12px;
		bottom: 12px;
		right: 0;
		border-left: 1px solid #dadce0;
	}
}

@keyframes spinner {
	to {
		transform: rotate(360deg);
	}
}
